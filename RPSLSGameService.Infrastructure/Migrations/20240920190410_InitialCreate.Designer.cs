// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RPSLSGameService.Infrastructure;

namespace RPSLSGameService.Infrastructure.Migrations
{
    [DbContext(typeof(RPSLSDbContext))]
    [Migration("20240920190410_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("RPSLSGameService.Domain.Models.GameSession", b =>
                {
                    b.Property<Guid>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentState")
                        .HasColumnType("INTEGER");

                    b.HasKey("SessionId");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("RPSLSGameService.Domain.Models.MatchResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Player1Choice")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Player2Choice")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ResultDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("WinnerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("MatchResults");
                });

            modelBuilder.Entity("RPSLSGameService.Domain.Models.Player", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GameSessionId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Choice")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name", "GameSessionId");

                    b.HasIndex("GameSessionId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("RPSLSGameService.Domain.Models.MatchResult", b =>
                {
                    b.HasOne("RPSLSGameService.Domain.Models.GameSession", null)
                        .WithMany("MatchResults")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RPSLSGameService.Domain.Models.Player", b =>
                {
                    b.HasOne("RPSLSGameService.Domain.Models.GameSession", null)
                        .WithMany("Players")
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RPSLSGameService.Domain.Models.GameSession", b =>
                {
                    b.Navigation("MatchResults");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
